# Render.com Infrastructure as Code
version: 3

databases:
  - name: tuinue-wasichana-db
    region: oregon
    plan: free
    databaseName: tuinue_wasichana
    user: dbadmin
    ipAllowList:
      - 0.0.0.0/0  

services:
  - type: web
    name: tuinue-wasichana-api
    env: python
    region: oregon
    plan: free
    branch: main
    rootDir: backend  
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
      flask db init || true  # Initialize only if needed
      flask db migrate -m "initial migration" || true
      flask db upgrade
      python -c "
      from app import create_app
      from models import db
      app = create_app()
      with app.app_context():
          db.create_all()
      "
    startCommand: >-
      gunicorn --bind 0.0.0.0:$PORT 
      --workers 4 
      --worker-class gevent 
      --timeout 120 
      --access-logfile - 
      --error-logfile - 
      'app:create_app()'
    healthCheckPath: /healthcheck
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: tuinue-wasichana-db
          property: connectionString
      - key: FLASK_ENV
        value: production
      - key: SECRET_KEY
        generateValue: true
      - key: CORS_ALLOWED_ORIGINS
        value: >-
          http://localhost:5173,
          http://localhost:10000,
          https://tuinue-wasichana-ui.onrender.com
      - key: CORS_SUPPORTS_CREDENTIALS
        value: 'true'
      - key: CORS_EXPOSE_HEADERS
        value: Content-Type,Authorization
    autoDeploy: true
    scaling:
      minInstances: 1
      maxInstances: 1

  - type: web
    name: tuinue-wasichana-ui
    env: node
    region: oregon
    plan: free
    branch: main
    rootDir: frontend
    buildCommand: |
      npm install
      npm run build
    startCommand: >-
      npm run preview 
      -- --host 0.0.0.0 
      --port $PORT
    envVars:
      - key: VITE_API_BASE_URL
        value: https://tuinue-wasichana-api.onrender.com
      - key: VITE_ENABLE_HTTPS
        value: 'true'
    autoDeploy: true
    scaling:
      minInstances: 1
      maxInstances: 1